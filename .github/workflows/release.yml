name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Extract tag name
      id: extract_tag
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Prepare release assets
      run: |
        python3 scripts/prepare_release.py --version "${{ steps.extract_tag.outputs.TAG_NAME }}" --clean

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.extract_tag.outputs.TAG_NAME }}
        release_name: Tsuki Engine ${{ steps.extract_tag.outputs.TAG_NAME }}
        body_path: releases/RELEASE_INFO.md
        draft: false
        prerelease: false

    - name: Upload IntelliSense Package (tar.gz)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: releases/tsuki-intellisense-${{ steps.extract_tag.outputs.TAG_NAME }}.tar.gz
        asset_name: tsuki-intellisense-${{ steps.extract_tag.outputs.TAG_NAME }}.tar.gz
        asset_content_type: application/gzip

    - name: Upload IntelliSense Package (zip)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: releases/tsuki-intellisense-${{ steps.extract_tag.outputs.TAG_NAME }}.zip
        asset_name: tsuki-intellisense-${{ steps.extract_tag.outputs.TAG_NAME }}.zip
        asset_content_type: application/zip
