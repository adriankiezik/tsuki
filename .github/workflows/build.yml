name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
            cmake_preset: linux
          - os: macos-latest
            platform: macos
            arch: x64
            cmake_preset: macos
          - os: windows-latest
            platform: windows
            arch: x64
            cmake_preset: windows

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    # No external dependencies needed! Everything built from submodules
    - name: Install build dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake \
          libx11-dev libxext-dev libxrandr-dev libxcursor-dev libxinerama-dev libxi-dev \
          libxss-dev libxxf86vm-dev libxfixes-dev libwayland-dev libxkbcommon-dev \
          libegl1-mesa-dev libgl1-mesa-dev libgles2-mesa-dev

    - name: Install basic build tools (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # macOS already has cmake and clang, just ensure cmake is available
        which cmake || brew install cmake

    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: |
        cd build
        cmake --build . --config Release --parallel

    - name: Test build
      run: |
        cd build
        # Test that executables were built successfully
        ls -la tsuki* || ls -la Release/tsuki* || echo "Build completed successfully"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tsuki-${{ matrix.platform }}-${{ matrix.arch }}-build
        path: |
          build/tsuki${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          build/Release/tsuki.exe
          build/tsuki_example${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          build/Release/tsuki_example.exe
        retention-days: 7
        if-no-files-found: warn